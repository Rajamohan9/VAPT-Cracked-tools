name: ðŸ”„ Check Updates

on:
  schedule:
    - cron: '0 0 * * *' # Every day at midnight
  workflow_dispatch:

permissions:
  # Give the default GITHUB_TOKEN write permission to commit and push the
  # added or changed files to the repository.
  contents: write

env:
  # Settings
  BURP_VERSION_FILE: BURP_VERSION

  # Commit Settings
#  CI_COMMIT_MESSAGE: Version ${{ steps.version.outputs.latest }}
#  CI_COMMIT_USERNAME: github-actions[bot]
#  CI_COMMIT_EMAIL: github-actions[bot]@users.noreply.github.com

jobs:
  check_updates:
    name: Check for updates
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.version.outputs.latest }}
      changes_detected: ${{ steps.version.outputs.changes_detected }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Install Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.2

      - name: Build & Check for updates
        id: version
        run: |
          go build -o version-updater version-updater.go
          chmod +x ./version-updater
          currenthash=$(sha256sum ${{ env.BURP_VERSION_FILE }} | cut -d ' ' -f 1)
          ./version-updater > ${{ env.BURP_VERSION_FILE }}
          version=$(cat ${{ env.BURP_VERSION_FILE }})
          echo "latest=$version" >> $GITHUB_OUTPUT
          echo "Updated version hashes: $currenthash -> $latesthash"
          latesthash=$(sha256sum ${{ env.BURP_VERSION_FILE }} | cut -d ' ' -f 1)
          if [ "$currenthash" != "$latesthash" ]; then
            echo "### ðŸš€ New Version - $version" >> $GITHUB_STEP_SUMMARY
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "### Up to date! ($version)" >> $GITHUB_STEP_SUMMARY
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi


  # This job is only run if the check_updates job has found a new version.
  # It will download the new version and upload it to the release.
  release:
    name: Release new version
    needs: check_updates
    if: needs.check_updates.outputs.changes_detected == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3