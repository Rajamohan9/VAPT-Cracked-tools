name: ðŸ”„ Check Updates

on:
  schedule:
    - cron: '0 20 * * 6' # At 20:00 on Saturday
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_updates:
  # Checks for updates to Burp Suite, by compiling the version-updater.go file and running it.
  # If there is a newer version, it will update the BURP_VERSION file and commit the changes.
  # Also, it will generate a new README.md file with the new version number and URLs.
  # Finally, it will upload the latest version number and a boolean indicating if there were changes to the 'updates' artifact.
    name: Check for updates
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.version.outputs.latest }}
      changes_detected: ${{ steps.version.outputs.changes_detected }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set Environment Variables
        uses: tw3lveparsecs/github-actions-setvars@latest
        with:
          envFilePath: .github/variables/global.env

      - name: Install Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.2

      - name: Build & Check for updates
        id: version
        run: |
          go build -o version-updater version-updater.go
          chmod +x ./version-updater
          currenthash=$(md5sum $BURP_VERSION_FILE | cut -d ' ' -f 1)
          ./version-updater > $BURP_VERSION_FILE
          rm -f ./version-updater
          version=$(cat ${{ env.BURP_VERSION_FILE }})
          echo "latest=$version" >> $GITHUB_OUTPUT
          latesthash=$(md5sum $BURP_VERSION_FILE | cut -d ' ' -f 1)
          echo "Updated version hashes: $currenthash to $latesthash"
          if [ "$currenthash" != "$latesthash" ]; then
            echo "### ðŸš€ New Version - $version" >> $GITHUB_STEP_SUMMARY
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "### Up to date! ($version)" >> $GITHUB_STEP_SUMMARY
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate README.md
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: README.md.j2
          output_file: README.md
          strict: true
          variables: |
            burp_version=${{ steps.version.outputs.latest }}

      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[AUTO] Update Burp Version"
          file_pattern: ${{ env.BURP_VERSION_FILE }} README.md

      - name: Create Artifact (updates)
        run: |
            echo "${{ steps.version.outputs.latest }}" > latest_version
            echo "${{ steps.version.outputs.changes_detected }}" > changes_detected
            
      - name: Upload Artifact (updates)
        uses: actions/upload-artifact@v3
        with:
          name: updates
          path: |
            changes_detected
            latest_version      

  create_release:
    # Creates a new release if there were changes detected in the previous job.
    # It will also upload the Burp Suite JAR file to the release.
    name: Create Release
    needs: check_updates
    if: needs.check_updates.outputs.changes_detected == 'true'
    secrets: inherit
    uses: mmgordon82/BurpSuiteInstaller/.github/workflows/release.yml@main
    
